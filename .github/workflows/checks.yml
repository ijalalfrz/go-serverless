name: CI Checks

on:
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-1

jobs:
  commitlint:
    name: Commit Lint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/.github/workflows/*.yml'

      # - name: Commit Lint
      #   run: |
      #     FIRST_COMMIT_SHA=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" ${{ github.event.pull_request.commits_url }} | jq -r '.[0].sha')
      #     npm install -g @commitlint/cli @commitlint/config-conventional
      #     commitlint --from $FIRST_COMMIT_SHA^

  
  lint-and-unit-test:
    name: lint-and-unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
      # - name: golangci-lint
      #   uses: golangci/golangci-lint-action@v4
      #   with:
      #     version: v1.60.3
      #     args: --out-format checkstyle:lint-report.xml,github-actions --timeout 5m
      - name: Run unit tests
        run: RUN_IN_DOCKER='' make tests-unit
      - name: Set env
        run: echo "ARTIFACT_NAME=$(echo $GITHUB_REF | tr '/' '-')" >> $GITHUB_ENV
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ env.ARTIFACT_NAME }}-unit
          path: |
            test/coverage-unit
          retention-days: 1
          overwrite: true

  terraform-format:
    name: Terraform Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: terraform
